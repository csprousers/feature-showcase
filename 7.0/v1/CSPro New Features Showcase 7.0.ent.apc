PROC GLOBAL

config string configVariable;

string capiText1;
string capiText2;
string capiText3;

file pffFile;

numeric NumberNames = 15;
array string someNames(NumberNames) =   "Abdi", "Abenet", "Abraham", "Abush", "Afewerk", "Alemu", "Alex",
                                        "Amanuel", "Ameha", "Aniley", "Ann", "Anna", "Annan", "Anu", "Ayda";

function OnStop()

    if getsymbol() = "MENU" then
        stop(1);

    else
        reenter MENU;

    endif;

end;


PROC SHOWCASE70_FF


PROC MENU

onfocus

    MENU = notappl;

postproc

    if MENU = 1 then        skip to SHOW_OPERATOR_ID;
    elseif MENU = 2 then    skip to SHOW_ENHANCED_NOTES;
    elseif MENU = 3 then    skip to SHOW_CASE_LABELS;
    elseif MENU = 4 then    skip to SHOW_DATA_SOURCES;
    elseif MENU = 5 then    skip to SHOW_SYNCHRONIZATION_FROM_LOGIC;
    elseif MENU = 6 then    skip to SHOW_CONFIG_SETTINGS;
    elseif MENU = 7 then    skip to SHOW_OTHER_FEATURES;
    elseif MENU = 8 then    stop(1);
    endif;

    reenter;


PROC SHOW_OPERATOR_ID

onfocus

    SHOW_OPERATOR_ID = "";

    if getoperatorid() = "" then
        capiText1 = "<none defined>";

    else
        capiText1 = getoperatorid();

    endif;

postproc

    setoperatorid(strip(SHOW_OPERATOR_ID));
    reenter;


PROC SHOW_ENHANCED_NOTES

onfocus

    SHOW_ENHANCED_NOTES = notappl;
    capiText1 = getnote(SHOWCASE70_DICT);
    capiText2 = getnote();
    // capiText3 = getnote(SHOW_ENHANCED_NOTES,"Demo");

postproc

    if SHOW_ENHANCED_NOTES = 1 then     editnote(SHOWCASE70_DICT);
    elseif SHOW_ENHANCED_NOTES = 2 then editnote();
    // elseif SHOW_ENHANCED_NOTES = 3 then  editnote(SHOW_ENHANCED_NOTES,"Demo");
    else                                reenter MENU;
    endif;

    reenter;


PROC SHOW_CASE_LABELS

onfocus

    string applicationFolder = pathname(application) + "Simple Application/";
    string applicationFile = applicationFolder + "Simple Application.ent";

    if not fileexist(applicationFile) then
        applicationFile = applicationFolder + "Simple Application.pen";

        if not fileexist(applicationFile) then
            errmsg("The Simple Application file must exist here: %s. Make sure it is on your device.", applicationFile);
            reenter MENU;
        endif;

    endif;

    SHOW_CASE_LABELS = notappl;

postproc

    if SHOW_CASE_LABELS = 0 then
        reenter MENU;
    endif;

    // create the new data source
    string repoFilename = maketext("%s%08d_%02d%02d%02d_%03d.csdb",
        applicationFolder,
        sysdate("YYYYMMDD"),
        // the systime function now takes arguments in the same that sysdate always has
        systime("HH"), // hour
        systime("MM"), // minute
        systime("SS"), // second
        SHOW_CASE_LABELS);

    setfile(SIMPLE_APPLICATION_DICT, repoFilename, create);

    seed(systime());

    do numeric ctr = 1 while ctr <= SHOW_CASE_LABELS
        // generate random values for the IDs and value
        clear(SIMPLE_APPLICATION_DICT);

        SIMPLE_APPLICATION_ID_1 = random(1, 99999);
        SIMPLE_APPLICATION_ID_2 = random(1, 99999);
        SIMPLE_APPLICATION_VALUE = random(1, 99999);

        // if there is already a case with the randomly generated IDs, then start the loop over
        if loadcase(SIMPLE_APPLICATION_DICT, SIMPLE_APPLICATION_ID_1, SIMPLE_APPLICATION_ID_2) then
            inc(ctr, -1);
            next;
        endif;

        setcaselabel(SIMPLE_APPLICATION_DICT, maketext("Case with IDs %05d-%05d: %s",
            SIMPLE_APPLICATION_ID_1, SIMPLE_APPLICATION_ID_2, someNames(random(1, NumberNames))));

        if ctr = 1 then // leave a case note for the first added case
            putnote("This is a case note.\nYou can put a lot of information in these notes and they will show on the Android case listing.", SIMPLE_APPLICATION_DICT);
        endif;

        writecase(SIMPLE_APPLICATION_DICT);

    enddo;

    close(SIMPLE_APPLICATION_DICT);

    // write a PFF to open Simply Application
    string pffFilename = repoFilename + ".pff";

    setfile(pffFile, pffFilename);

    filewrite(pffFile, "[Run Information]");
    filewrite(pffFile, "Version=CSPro 7.0");
    filewrite(pffFile, "AppType=Entry");
    filewrite(pffFile, "Description="); // blank description won't show in the Android application listing

    filewrite(pffFile, "[Files]");
    filewrite(pffFile, "Application=%s", applicationFile);
    filewrite(pffFile, "InputData=%s", repoFilename);

    close(pffFile);

    execpff(pffFilename);

    if getos() in 20:29 then
        // on Android stop so that the PFF is opened
        stop(1);
    endif;

    reenter;


PROC SHOW_DATA_SOURCES

preproc

    SHOW_DATA_SOURCES = 1;

postproc

    if SHOW_DATA_SOURCES = 0 then
        reenter MENU;

    else
        reenter;

    endif;


PROC SHOW_SYNCHRONIZATION_FROM_LOGIC

onfocus

    SHOW_SYNCHRONIZATION_FROM_LOGIC = 0;

postproc

    reenter MENU;


PROC SHOW_CONFIG_SETTINGS

onfocus

    SHOW_CONFIG_SETTINGS = 0;

postproc

    reenter MENU;


PROC SHOW_OTHER_FEATURES

onfocus

    SHOW_OTHER_FEATURES = 0;

postproc

    reenter MENU;
